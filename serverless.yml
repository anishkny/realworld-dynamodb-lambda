service: realworld

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  environment:
    DYNAMODB_NAMESPACE: ${opt:stage, "dev"}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

package:
  exclude:
    - test/**
    - coverage/**
    - lambda-node-logo.png
    - .nyc_output/**

plugins:
  - serverless-dynamodb-local
  - serverless-offline

functions:

  ## Users API
  createUser:
    handler: src/User.create
    events:
      - http: POST /users

  loginUser:
    handler: src/User.login
    events:
      - http: POST /users/login

  getUser:
    handler: src/User.get
    events:
      - http: GET /user

  getProfile:
    handler: src/User.getProfile
    events:
      - http: GET /profiles/{username}

  followUser:
    handler: src/User.follow
    events:
      - http: POST /profiles/{username}/follow

  unfollowUser:
    handler: src/User.follow
    events:
      - http: DELETE /profiles/{username}/follow

  ## Articles API
  createArticle:
    handler: src/Article.create
    events:
      - http: POST /articles

  getArticle:
    handler: src/Article.get
    events:
      - http: GET /articles/{slug}

  deleteArticle:
    handler: src/Article.delete
    events:
      - http: DELETE /articles/{slug}

  favoriteArticle:
    handler: src/Article.favorite
    events:
      - http: POST /articles/{slug}/favorite

  unfavoriteArticle:
    handler: src/Article.favorite
    events:
      - http: DELETE /articles/{slug}/favorite

  ## Comments API
  createComment:
    handler: src/Comment.create
    events:
      - http: POST /articles/{slug}/comments

  getComments:
    handler: src/Comment.get
    events:
      - http: GET /articles/{slug}/comments

  deleteComment:
    handler: src/Comment.delete
    events:
      - http: DELETE /articles/{slug}/comments/{id}

  ## Utils API
  ping:
    handler: src/Util.ping
    events:
      - http: GET ping

  purgeData:
    handler: src/Util.purgeData
    events:
      - http: DELETE /__TESTUTILS__/purge

resources:
  Resources:

    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: username
            AttributeType: S
          -
            AttributeName: email
            AttributeType: S
        KeySchema:
          -
            AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: realworld-${self:provider.environment.DYNAMODB_NAMESPACE}-users
        GlobalSecondaryIndexes:
          -
            IndexName: email
            KeySchema:
              -
                AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

    ArticlesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: slug
            AttributeType: S
        KeySchema:
          -
            AttributeName: slug
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: realworld-${self:provider.environment.DYNAMODB_NAMESPACE}-articles

    CommentsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: slug
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: realworld-${self:provider.environment.DYNAMODB_NAMESPACE}-comments
        GlobalSecondaryIndexes:
          -
            IndexName: article
            KeySchema:
              -
                AttributeName: slug
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
